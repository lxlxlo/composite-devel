<?xml version='1.0' encoding='UTF-8'?> <!-- -*- mode: nxml; -*- -->
<!--
  Copyright (c) 2010 by Gabriel M. Beddingfield <gabriel@teuton.org>

  This file is part of Tritium

  Tritium is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  Tritium is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY, without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'
	   targetNamespace='http://gabe.is-a-geek.org/tritium/xml/1/'
	   xmlns='http://gabe.is-a-geek.org/tritium/xml/1/'
	   elementFormDefault='qualified' >

  <!-- IN-PROCESS VERSION 1 OF SCHEMA, THIS SCHEMA IS NOT FINALIZED  -->

  <xs:annotation>
    <xs:documentation xml:lang='en'>
      This schema is intended to define all of the XML components used
      by the Tritium.  The elements that are expected to be "top-level
      elements" are &lt;tritium&gt; and any of its direct children.
      Note that file formats that are expressly Hydrogen's are not
      included here.
    </xs:documentation>
  </xs:annotation>

  <!-- ###############################################################
       ### REUSABLE BASIC TYPES                                    ###
       ###############################################################
  -->

  <xs:simpleType name='midi_integer'>
    <xs:restriction base='xs:integer'>
      <xs:minInclusive value='0'/>
      <xs:maxInclusive value='127'/>
    </xs:restriction>
  </xs:simpleType>


  <!-- ###############################################################
       ### TOP LEVEL ELEMENT DEFINITION                            ###
       ###############################################################
  -->
  <xs:element name='tritium' type='tritium_Type'>
    <xs:annotation>
      <xs:documentation xml:lang='en'>
	This is the top-level element for the Tritium XML schemas.  In
	addition, any of its children may be used as top-level
	elements.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name='tritium_Type'>
    <xs:choice minOccurs='1' maxOccurs='unbounded'>
      <xs:element name='programs' type='programs_Type'/>
    </xs:choice>
  </xs:complexType>

  <xs:element name='programs' type='programs_Type'>
    <xs:annotation>
      <xs:documentation xml:lang='en'>
	The programs element is simply a container for several
	&lt;bank&gt; elements.  There must be at least one
	&lt;bank&gt;.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name='programs_Type'>
    <xs:sequence minOccurs='1' maxOccurs='unbounded'>
      <xs:element name='bank' type='bank_Type'/>
    </xs:sequence>
  </xs:complexType>

  <!-- ###############################################################
       ### DETAILED ELEMENT TYPE DEFITIONS                         ###
       ###############################################################
  -->

  <xs:complexType name='bank_Type'>
    <xs:annotation>
      <xs:documentation xml:lang='en'>
	This corresponds to a MIDI Bank selection (MIDI CC# 0/coarse
	and 32/fine).  It defines which bank this is for, and is a
	container for several &lt;program&gt; or "preset" definitions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs='1' maxOccurs='unbounded'>
      <xs:element name='program' type='program_Type'/>
    </xs:sequence>
    <xs:attribute name='coarse' type='midi_integer' default='0'/>
    <xs:attribute name='fine' type='midi_integer' default='0'/>
  </xs:complexType>

  <xs:complexType name='program_Type'>
    <xs:annotation>
      <xs:documentation xml:lang='en'>
	And individual program/preset that maps a PC event to a
	resource that should be loaded.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name='midi_number' type='midi_integer'>
	<xs:annotation>
	  <xs:documentation xml:lang='en'>
	    This directly corresponds exactly to the Program Change number
	    that is sent in the MIDI message.
	  </xs:documentation>
	</xs:annotation>
      </xs:element>
      <xs:element name='resource' type='xs:anyURI'>
	<xs:annotation>
	  <xs:documentation xml:lang='en'>
	    The URL to a Composite resource file.  May be any valid file
	    that can be loaded into Composite, including a 'programs'
	    definition file.
	  </xs:documentation>
	</xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
